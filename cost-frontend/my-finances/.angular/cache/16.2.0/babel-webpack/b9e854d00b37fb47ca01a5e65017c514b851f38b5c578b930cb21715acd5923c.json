{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8000/';\n  }\n  createCategory(data) {\n    return this.http.post(`${this.baseUrl}apicategories/`, data);\n  }\n  getCategories() {\n    return this.http.get(`${this.baseUrl}apicategories/`);\n  }\n  getCategoryDetails(categoryId) {\n    return this.http.get(`${this.baseUrl}apicategories/${categoryId}/`);\n  }\n  createTransaction(data) {\n    return this.http.post(`${this.baseUrl}apitransactions/`, data);\n  }\n  gettransactions() {\n    return this.http.get(`${this.baseUrl}apicategories/`);\n  }\n}\n_class = ApiService;\n_class.ɵfac = function ApiService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ApiService","constructor","http","baseUrl","createCategory","data","post","getCategories","get","getCategoryDetails","categoryId","createTransaction","gettransactions","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/mnt/Datos/MANUEL/EVALUACIONES/getxerpa_second_test/cost-frontend/my-finances/src/app/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private baseUrl = 'http://localhost:8000/';\n\n  constructor(private http: HttpClient) {}\n\n  createCategory(data: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}apicategories/`, data);\n  }\n\n  getCategories(): Observable<any> {\n    return this.http.get(`${this.baseUrl}apicategories/`);\n  }\n\n  getCategoryDetails(categoryId: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}apicategories/${categoryId}/`);\n  }\n\n  createTransaction(data: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}apitransactions/`, data);\n  }\n\n  gettransactions(): Observable<any> {\n    return this.http.get(`${this.baseUrl}apicategories/`);\n  }\n\n  // Implementa más métodos según tus necesidades para transacciones u otras acciones.\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,wBAAwB;EAEH;EAEvCC,cAAcA,CAACC,IAAS;IACtB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,gBAAgB,EAAEE,IAAI,CAAC;EAC9D;EAEAE,aAAaA,CAAA;IACX,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACL,OAAO,gBAAgB,CAAC;EACvD;EAEAM,kBAAkBA,CAACC,UAAkB;IACnC,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACL,OAAO,iBAAiBO,UAAU,GAAG,CAAC;EACrE;EAEAC,iBAAiBA,CAACN,IAAS;IACzB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,kBAAkB,EAAEE,IAAI,CAAC;EAChE;EAEAO,eAAeA,CAAA;IACb,OAAO,IAAI,CAACV,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACL,OAAO,gBAAgB,CAAC;EACvD;;SAvBWH,UAAU;;mBAAVA,MAAU,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAVhB,MAAU;EAAAiB,OAAA,EAAVjB,MAAU,CAAAkB,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}