{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let CategoryListComponent = class CategoryListComponent {\n  constructor(apiService, router, dialog) {\n    this.apiService = apiService;\n    this.router = router;\n    this.dialog = dialog;\n    this.categories = [];\n    this.transactions = [];\n  }\n  ngOnInit() {\n    this.loadCategories();\n  }\n  loadCategories() {\n    this.apiService.getCategories() // Asegúrate de tener un método getCategories en tu ApiService\n    .subscribe(categories => {\n      this.categories = categories;\n      // Ahora, para cada categoría, obtenemos sus transacciones y calculamos el total gastado\n      this.categories.forEach(category => {\n        this.apiService.gettransactions() // Asegúrate de tener un método getTransactionsForCategory en tu ApiService\n        .subscribe(transactions => {\n          category.transactions = transactions;\n          category.totalSpent = this.calculateTotalSpent(category.transactions, category.id);\n        });\n      });\n    });\n  }\n  calculateTotalSpent(transactions, categoryId) {\n    const transactionsForCategory = transactions.filter(transaction => transaction.category == categoryId);\n    this.transactions = transactionsForCategory;\n    if (transactionsForCategory && transactionsForCategory.length > 0) {\n      const totalSpent = transactionsForCategory.reduce((total, transaction) => total + parseFloat(transaction.amount), 0);\n      return totalSpent;\n    } else {\n      return 0;\n    }\n  }\n  getTransactionsForCategoryId(categoryId) {\n    const category = this.categories.find(category => category.id === categoryId);\n    return category ? category.transactions : [];\n  }\n  viewCategoryDetail(category) {\n    this.router.navigateByUrl('/category-detail', {\n      state: {\n        category\n      }\n    });\n  }\n  confirmDelete(category) {\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      data: {\n        message: '¿Estás seguro de que deseas eliminar esta categoría?'\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.deleteCategory(category);\n      }\n    });\n  }\n  deleteCategory(category) {\n    this.apiService.deleteCategory(category.id).subscribe(() => {\n      // Actualiza la lista de categorías después de eliminar\n      this.categories = this.categories.filter(c => c !== category);\n    });\n  }\n};\nCategoryListComponent = __decorate([Component({\n  selector: 'app-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.scss']\n})], CategoryListComponent);","map":{"version":3,"names":["Component","CategoryListComponent","constructor","apiService","router","dialog","categories","transactions","ngOnInit","loadCategories","getCategories","subscribe","forEach","category","gettransactions","totalSpent","calculateTotalSpent","id","categoryId","transactionsForCategory","filter","transaction","length","reduce","total","parseFloat","amount","getTransactionsForCategoryId","find","viewCategoryDetail","navigateByUrl","state","confirmDelete","dialogRef","open","ConfirmationDialogComponent","data","message","afterClosed","result","deleteCategory","c","__decorate","selector","templateUrl","styleUrls"],"sources":["/mnt/Datos/MANUEL/EVALUACIONES/getxerpa_second_test/cost-frontend/my-finances/src/app/category-list/category-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog'; // Importa el servicio MatDialog\n\n@Component({\n  selector: 'app-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.scss']\n})\nexport class CategoryListComponent implements OnInit {\n  categories: any[] = [];\n  transactions: any[] = [];\n\n  constructor(private apiService: ApiService, private router: Router, private dialog: MatDialog) {}\n\n  ngOnInit() {\n    this.loadCategories();\n  }\n\n  loadCategories(): void {\n    this.apiService.getCategories() // Asegúrate de tener un método getCategories en tu ApiService\n      .subscribe(categories => {\n        this.categories = categories;\n\n        // Ahora, para cada categoría, obtenemos sus transacciones y calculamos el total gastado\n        this.categories.forEach(category => {\n          this.apiService.gettransactions() // Asegúrate de tener un método getTransactionsForCategory en tu ApiService\n            .subscribe(transactions => {\n              category.transactions = transactions;\n              category.totalSpent = this.calculateTotalSpent(category.transactions, category.id);\n            });\n        });\n      });\n  }\n\n  calculateTotalSpent(transactions: any[], categoryId: any[]): number {\n    const transactionsForCategory = transactions.filter(transaction => transaction.category == categoryId);\n    this.transactions = transactionsForCategory\n    if (transactionsForCategory && transactionsForCategory.length > 0) {\n      const totalSpent = transactionsForCategory.reduce((total, transaction) => total + parseFloat(transaction.amount), 0);\n      return totalSpent;\n    } else {\n      return 0;\n    }\n  }\n\n  getTransactionsForCategoryId(categoryId: number): any[] {\n    const category = this.categories.find(category => category.id === categoryId);\n    return category ? category.transactions : [];\n  }\n\n  viewCategoryDetail(category: any): void {\n    this.router.navigateByUrl('/category-detail', { state: { category } });\n  }\n  \n  confirmDelete(category: any): void {\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      data: { message: '¿Estás seguro de que deseas eliminar esta categoría?' }\n    });\n\n    dialogRef.afterClosed().subscribe((result: boolean) => {\n      if (result) {\n        this.deleteCategory(category);\n      }\n    });\n  }\n\n  deleteCategory(category: any): void {\n    this.apiService.deleteCategory(category.id).subscribe(() => {\n      // Actualiza la lista de categorías después de eliminar\n      this.categories = this.categories.filter(c => c !== category);\n    });\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}